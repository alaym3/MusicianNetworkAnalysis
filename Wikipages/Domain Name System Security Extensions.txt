{{short description|Suite of IETF specifications for securing certain kinds of information provided by DNS}}
{{Security protocol}}
The '''Domain Name System Security Extensions''' ('''DNSSEC''') is a suite of extension specifications by the [[Internet Engineering Task Force]] (IETF) for securing data exchanged in the [[Domain Name System]] (DNS) in [[Internet Protocol]] (IP) networks. The protocol provides [[message authentication|cryptographic authentication]] of data, authenticated denial of existence, and data integrity, but not availability or confidentiality.

==Overview==
The original design of the Domain Name System did not include any security features. It was conceived only as a scalable distributed system. The Domain Name System Security Extensions (DNSSEC) attempt to add security, while maintaining [[backward compatibility]]. Request for Comments 3833 documents some of the known threats to the DNS, and their solutions in DNSSEC.

DNSSEC was designed to protect applications using DNS from accepting forged or manipulated DNS data, such as that created by [[DNS cache poisoning]]. All answers from DNSSEC protected zones are [[digital signature|digitally signed]]. By checking the digital signature, a DNS resolver is able to check if the information is identical (i.e. unmodified and complete) to the information published by the zone owner and served on an authoritative DNS server. While protecting IP addresses is the immediate concern for many users, DNSSEC can protect any data published in the DNS, including text records (TXT) and mail exchange records (MX), and can be used to bootstrap other security systems that publish references to cryptographic certificates stored in the DNS such as Certificate Records ([[CERT record]]s, RFC 4398), [[Secure Shell|SSH]] fingerprints ([[SSHFP record|SSHFP]], RFC 4255), [[IPSec]] public keys (IPSECKEY, RFC 4025), and [[Transport Layer Security|TLS]] Trust Anchors (TLSA, RFC 6698).

DNSSEC ''does not'' provide confidentiality of data; in particular, all DNSSEC responses are authenticated but not encrypted. DNSSEC ''does not'' protect against [[denial of service|DoS]] attacks directly, though it indirectly provides some benefit (because signature checking allows the use of potentially untrustworthy parties).{{citation needed|date=February 2013}}

Other standards (not DNSSEC) are used to secure bulk data (such as a [[DNS zone transfer]]) sent between DNS servers. As documented in IETF RFC 4367, some users and developers make false assumptions about DNS names, such as assuming that a company's common name plus ".com" is always its domain name. DNSSEC cannot protect against false assumptions; it can only authenticate that the data is truly from or not available from the domain owner.{{citation needed|date=February 2013}}

The DNSSEC specifications (called ''DNSSEC-bis'') describe the current DNSSEC protocol in great detail. See RFC 4033, RFC 4034, and RFC 4035. With the publication of these new RFCs (March 2005), an earlier RFC, RFC 2535 has become obsolete.

It is widely believed<ref>Interview with Dan Kaminsky on DNSSEC (25 Jun 2009) [http://searchsecurity.techtarget.com/news/interview/0,289202,sid14_gci1360143,00.html Kaminsky interview: DNSSEC addresses cross-organizational trust and security]</ref> that securing the DNS is critically important for securing the Internet as a whole, but deployment of DNSSEC specifically has been hampered ({{As of|2010|January|22}}) by several difficulties:
* The need to design a backward-compatible standard that can scale to the size of the Internet
* Prevention of "zone enumeration" where desired
* Deployment of DNSSEC implementations across a wide variety of DNS servers and resolvers (clients)
* Disagreement among implementers over who should own the [[top-level domain]] root keys
* Overcoming the perceived complexity of DNSSEC and DNSSEC deployment

==Operation==
DNSSEC works by [[digital signature|digitally signing]] records for DNS lookup using [[public-key cryptography]]. The correct DNSKEY record is authenticated via a [[chain of trust]], starting with a set of verified public keys for the [[DNS root zone]] which is the [[trusted third party]]. Domain owners generate their own keys, and upload them using their DNS control panel at their domain-name registrar, which in turn pushes the keys via secDNS to the zone operator (e.g., Verisign for .com) who signs and publishes them in DNS.

===Resource records===
DNS is implemented by the use of several resource records. To implement DNSSEC, several new [[list of DNS record types|DNS record types]] were created or adapted to use with DNSSEC:
;RRSIG (resource record signature): Contains the DNSSEC signature for a record set. DNS resolvers verify the signature with a public key, stored in a DNSKEY record.
;DNSKEY: Contains the public key that a DNS resolver uses to verify DNSSEC signatures in RRSIG records.
;DS (delegation signer): Holds the name of a delegated zone. References a DNSKEY record in the sub-delegated zone. The DS record is placed in the parent zone along with the delegating NS records.
;NSEC (next secure record): Contains a link to the next record name in the zone and lists the record types that exist for the record's name. DNS resolvers use NSEC records to verify the non-existence of a record name and type as part of DNSSEC validation.
;NSEC3 (next secure record version 3): Contains links to the next record name in the zone (in hashed name sorting order) and lists the record types that exist for the name covered by the hash value in the first label of the NSEC3 record's own name. These records can be used by resolvers to verify the non-existence of a record name and type as part of DNSSEC validation. NSEC3 records are similar to NSEC records, but NSEC3 uses cryptographically hashed record names to avoid the enumeration of the record names in a zone.
;NSEC3PARAM (next secure record version 3 parameters): Authoritative DNS servers use this record to calculate and determine which NSEC3 records to include in responses to DNSSEC requests for non-existing names/types.

When DNSSEC is used, each answer to a DNS lookup contains an RRSIG DNS record, in addition to the record type that was requested.  The RRSIG record is a digital signature of the answer [[DNS]] resource record set. The digital signature is verified by locating the correct public key found in a DNSKEY record. The NSEC and NSEC3 records are used to provide cryptographic evidence of the non-existence of any Resource Record (RR). The DS record is used in the authentication of DNSKEYs in the lookup procedure using the chain of trust. NSEC and NSEC3 records are used for robust resistance against spoofing.

====Algorithms====

DNSSEC was designed to be extensible so that as attacks are discovered against existing algorithms, new ones can be introduced in a [[backward-compatible]] fashion. The following table defines, as of April 2013, the security algorithms that are most often used:<ref>{{cite web
 | url = https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml
 | title = Domain Name System Security (DNSSEC) Algorithm Numbers | date = 2010-07-12 | access-date = 2010-07-17
 | publisher = [[Internet Assigned Numbers Authority|IANA]]
}}</ref>

{| class="wikitable"
|-
! Algorithm field
! Algorithm
! Source
! DNSSEC Signing
! DNSSEC Validation<ref>{{cite document
 | url = https://tools.ietf.org/html/rfc8624
 | title = RFC-8624
 | date = June 2019
 | publisher = [[Internet Engineering Task Force|IETF]]
| last1 = Wouters
 | first1 = Paul
 | last2 = Surý
 | first2 = Ondřej
 }}</ref>
|-
|  1 || [[RSA (algorithm)|RSA]]/[[MD5]]                ||                        || {{no|Must Not Implement}} || {{no|Must Not Implement}}
|-
|  3 || [[Digital Signature Algorithm|DSA]]/[[SHA-1]]  ||                        || {{no|Must Not Implement}} || {{no|Must Not Implement}}
|-
|  5 || RSA/SHA-1                                      || RFC 3110               || {{no2|Not Recommended}}   || {{yes|Required}}
|-
|  6 || DSA-NSEC3-SHA1                                 ||                        || {{no|Must Not Implement}} || {{no|Must Not Implement}}
|-
|  7 || RSASHA1-NSEC3-SHA1                             || RFC 5155               || {{no2|Not Recommended}}   || {{yes|Required}}
|-
|  8 || RSA/[[SHA-2|SHA-256]]                          || rowspan="2" | RFC 5702 || {{yes|Required}}          || {{yes|Required}}
|-
| 10 || RSA/[[SHA-2|SHA-512]]                                                    || {{no2|Not Recommended}}   || {{yes|Required}}
|-
| 12 || [[GOST]] [[GOST (hash function)|R 34.10-2001]] || RFC 5933               || {{no|Must Not Implement}} || {{Okay|Optional}}
|-
| 13 || [[Elliptic Curve DSA|ECDSA]]/[[SHA-2|SHA-256]] || rowspan="2" | RFC 6605 || {{yes|Required}}          || {{yes|Required}}
|-
| 14 || ECDSA/[[SHA-2|SHA-384]]                                                  || {{Okay|Optional}}         || {{partial|Recommended}}
|-
| 15 || [[Ed25519]]                                    || rowspan="2" | RFC 8080 || {{partial|Recommended}}   || {{partial|Recommended}}
|-
| 16 || [[Curve448|Ed448]]                                                       || {{Okay|Optional}}         || {{partial|Recommended}}
|}

{| class="wikitable"
|-
! Digest field
! Digest
! Source
! Implementation status<ref>{{cite web
 | url = http://tools.ietf.org/html/rfc4035
 | title = RFC-4035
 | publisher = [[Internet Engineering Task Force|IETF]]
}}</ref>
|-
|  1 || [[SHA-1]]                                       || RFC 3658               || {{yes|Required}}
|-
|  2 || [[SHA-256]]                                     || RFC 4509               || {{yes|Required}}
|-
|  3 || [[GOST]] [[GOST (hash function)|R 34.10-2001]]  || RFC 5933               || {{okay|Optional}}
|-
|  4 || [[SHA-384]]                                     || RFC 6605               || {{okay|Optional}}
|}

===The lookup procedure===
From the results of a DNS lookup, a security-aware [[DNS resolver]] can determine whether the [[authoritative name server]] for the domain being queried supports DNSSEC, whether the answer it receives is secure, and whether there is some sort of error. The lookup procedure is different for [[Domain Name System#Recursive and caching name server|recursive name servers]] such as those of many [[Internet service provider|ISP]]s, and for [[stub resolver]]s such as those included by default in mainstream operating systems. [[Microsoft Windows]] uses a stub resolver, and Windows Server 2008 R2 and Windows 7 in particular use a non-validating but DNSSEC-aware stub resolver.<ref name="windows-understanding">{{cite web | title= Understanding DNSSEC in Windows | publisher= [[Microsoft]] | date= October 7, 2009 | url= https://technet.microsoft.com/en-us/library/ee649277(WS.10).aspx | quote= The Windows DNS client is a stub resolver...}}</ref><ref name="windows-dnssec">{{cite web | title= DNS Security Extensions (DNSSEC) | publisher= [[Microsoft]] | date= October 21, 2009 | url= https://technet.microsoft.com/en-us/library/ee683904(WS.10).aspx | quote= The DNS client in Windows Server 2008 R2 and Windows® 7 is a non-validating security-aware stub resolver.}}</ref>

====Recursive name servers====
Using the [[chain of trust]] model, a Delegation Signer (DS) record in a parent domain ([[DNS zone]]) can be used to verify a DNSKEY record in a [[subdomain]], which can then contain other DS records to verify further subdomains. Say that a recursive resolver such as an ISP name server wants to get the IP addresses ([[A record]] and/or [[AAAA record]]s) of the domain "www.[[example.com]]".

# The process starts when a security-aware resolver sets the "DO" ("DNSSEC OK"<ref>{{cite web|last1=Conrad|first1=D.|title=Indicating Resolver Support of DNSSEC|url=https://www.ietf.org/rfc/rfc3225.txt|website=Internet Engineering Task Force|access-date=27 April 2017|ref=3. Protocol Changes}}</ref>) flag bit in a DNS query. Since the DO bit is in the extended flag bits defined by [[Extension Mechanisms for DNS|Extension Mechanisms for DNS (EDNS)]], all DNSSEC transactions must support EDNS. EDNS support is also needed to allow for the much larger packet sizes that DNSSEC transactions require.
# When the resolver receives an answer via the normal DNS lookup process, it then checks to make sure that the answer is correct. Ideally, the security-aware resolver would start with verifying the DS and DNSKEY records at the [[DNS root]]. Then it would use the DS records for the "com" [[top-level domain]] found at the root to verify the DNSKEY records in the "com" zone. From there, it would see if there is a DS record for the "example.com" subdomain in the "com" zone, and if there were, it would then use the DS record to verify a DNSKEY record found in the "example.com" zone. Finally, it would verify the RRSIG record found in the answer for the A records for "www.example.com".

There are several exceptions to the above example.

First, if "example.com" does not support DNSSEC, there will be no RRSIG record in the answer and there will not be a DS record for "example.com" in the "com" zone.  If there is a DS record for "example.com", but no RRSIG record in the reply, something is wrong and maybe a [[man in the middle attack]] is going on, stripping the DNSSEC information and modifying the A records.  Or, it could be a broken security-oblivious name server along the way that stripped the DO flag bit from the query or the RRSIG record from the answer.  Or, it could be a configuration error.

Next, it may be that there is not a domain name named "www.example.com", in which case instead of returning a RRSIG record in the answer, there will be either an NSEC record or an NSEC3 record.  These are "next secure" records that allow the resolver to prove that a domain name does not exist.  The NSEC/NSEC3 records have RRSIG records, which can be verified as above.

Finally, it may be that the "example.com" zone implements DNSSEC, but either the "com" zone or the root zone do not, creating an "island of security" which needs to be validated in some other way. {{as of|2010|7|15}}, deployment of DNSSEC to root is completed.<ref>{{Cite web | url=http://www.root-dnssec.org/ | title=Root DNSSEC}}</ref> The .com domain was signed with valid security keys and the secure delegation was added to the root zone on 1 April 2011.<ref>{{Cite web|url=http://www.v3.co.uk/v3-uk/news/2039287/verisign-adds-dnssec-com-domain-boost-online-security/|title=Computing - the UK's leading source for the analysis of business technology}}</ref>

====Stub resolvers====
Stub resolvers are "minimal DNS resolvers that use recursive query mode to offload most of the work of DNS resolution to a recursive name server."<ref name="rfc4033_section7">
  {{Cite journal
    | title= RFC 4033: DNS Security Introduction and Requirements
    | publisher= [[The Internet Society]]
    | date= March 2005
    | page= 11
    | url= http://tools.ietf.org/html/rfc4033#section-7
    | quote = Stub resolvers, by definition, are minimal DNS resolvers that use recursive query mode to offload most of the work of DNS resolution to a recursive name server.
    | last1= Rose
 | first1= Scott
 | last2= Larson
 | first2= Matt
 | last3= Massey
 | first3= Dan
 | last4= Austein
 | first4= Rob
 | last5= Arends
 | first5= Roy
 }}
  An earlier definition was given in an earlier RFC:
  {{Cite journal
    | title = RFC 1123 - Requirements for Internet Hosts -- Application and Support
    | publisher= IETF ([[Internet Engineering Task Force]])
    | author = Robert Braden
    | date= October 1989
    | quote = A "stub resolver" relies on the services of a recursive name server [...]
    | page= 74
    | url= http://tools.ietf.org/html/rfc1123#page-74
  }}
</ref> A stub resolver will simply forward a request to a recursive name server, and use the Authenticated Data (AD) bit in the response as a "hint to find out whether the recursive name server was able to validate signatures for all of the data in the Answer and Authority sections of the response."<ref name="rfc4033_p12"/> [[Microsoft Windows]] uses a stub resolver, and Windows Server 2008 R2 and Windows 7 in particular use a non-validating but AD-bit-aware stub resolver.<ref name="windows-understanding"/><ref name="windows-dnssec"/>

A ''validating stub resolver'' can also potentially perform its own signature validation by setting the Checking Disabled (CD) bit in its query messages.<ref name="rfc4033_p12"/> A validating stub resolver uses the CD bit to perform its own recursive authentication. Using such a validating stub resolver gives the client end-to-end DNS security for domains implementing DNSSEC, even if the Internet service provider or the connection to them is not trusted.

Non-validating stub resolvers must rely on external DNSSEC validation services, such as those controlled by the user's [[Internet service provider]]) or a [[public recursive name server]] and the communication channels between itself and those name servers, using methods such as [[DNS over TLS]].<ref name="rfc4033_p12">{{Cite journal | title= RFC 4033: DNS Security Introduction and Requirements | publisher= [[The Internet Society]] | date= March 2005 | page= 12 | url= http://tools.ietf.org/html/rfc4033#page-12 | last1= Rose | first1= Scott | last2= Larson | first2= Matt | last3= Massey | first3= Dan | last4= Austein | first4= Rob | last5= Arends | first5= Roy }}</ref><ref name="practical-ipsec">{{cite book | title= Enabling Practical IPsec Authentication for the Internet | first1= Pedro J. | last1= Muñoz Merino | first2= Alberto | last2= García-Martínez | first3= Mario Muñoz | last3= Organero | first4= Carlos Delgado | last4= Kloos | year= 2006 | series= On the Move to Meaningful Internet Systems 2006: OTM 2006 Workshops | volume= 1 | editor1-first= Robert | editor1-last= Meersman | editor2-first= Zahir | editor2-last= Tari | editor3-first= Herrero Martín | editor3-last= Herrero | publisher= [[Springer Science+Business Media|Springer]] | url= http://netcom.it.uc3m.es/publications/pdf/2006/fulltext.pdf | url-status= dead | archive-url= https://web.archive.org/web/20120426065241/http://netcom.it.uc3m.es/publications/pdf/2006/fulltext.pdf | archive-date= 2012-04-26 }}</ref>

===Trust anchors and authentication chains===
To be able to prove that a DNS answer is correct, one needs to know at least one key or DS record that is correct from sources other than the DNS.  These starting points are known as '''trust anchors''' and are typically obtained with the [[operating system]] or via some other trusted source.  When DNSSEC was originally designed, it was thought that the only trust anchor that would be needed was for the [[DNS root]]. The root anchors were first published on 15 July 2010.<ref>[https://data.iana.org/root-anchors/ root-anchors]</ref>

An ''[[authentication]] chain'' is a series of linked DS and DNSKEY records, starting with a [[trust anchor]] to the [[authoritative name server]] for the domain in question.  Without a complete authentication chain, an answer to a DNS lookup cannot be securely authenticated.

===Signatures and zone signing===
To limit replay attacks, there are not only the normal DNS TTL values for caching purposes, but additional timestamps in RRSIG records to limit the validity of a signature. Unlike TTL values which are relative to when the records were sent, the timestamps are absolute.  This means that all security-aware DNS resolvers must have clocks that are fairly closely in sync, say to within a few minutes.

These timestamps imply that a zone must regularly be re-signed and re-distributed to secondary servers, or the signatures will be rejected by validating resolvers.

===Key management===
DNSSEC involves many different keys, stored both in DNSKEY records, and from other sources to form [[trust anchor]]s.

In order to allow for replacement keys, a '''key rollover''' scheme is required.  Typically, this involves first rolling out new keys in new DNSKEY records, in addition to the existing old keys.  Then, when it is safe to assume that the [[time to live]] values have caused the caching of old keys to have passed, these new keys can be used.  Finally, when it is safe to assume that the caching of records using the old keys have expired, the old DNSKEY records can be deleted.   This process is more complicated for things such as the keys to trust anchors, such as at the root, which may require an update of the operating system.

Keys in DNSKEY records can be used for two different things and typically different DNSKEY records are used for each.  First, there are '''key signing keys''' (KSK) which are used to sign other DNSKEY records.  Second, there are '''zone signing keys''' (ZSK) which are used to sign other records.  Since the ZSKs are under complete control and use by one particular [[DNS zone]], they can be switched more easily and more often.  As a result, ZSKs can be much shorter than KSKs and still offer the same level of protection while reducing the size of the RRSIG/DNSKEY records.

When a new KSK is created, the DS record must be transferred to the parent zone and published there.  The DS records use a [[message digest]] of the KSK instead of the complete key in order to keep the size of the records small.  This is helpful for zones such as the [[.com]] domain, which are very large.  The procedure to update DS keys in the parent zone is also simpler than earlier DNSSEC versions that required DNSKEY records to be in the parent zone.

===DANE Working Group===
[[DNS-based Authentication of Named Entities]] (DANE) is an IETF working group<ref>[https://datatracker.ietf.org/wg/dane/charter/ IETF: DNS-based Authentication of Named Entities (dane)]</ref> with the goal of developing protocols and techniques that allow Internet applications to establish cryptographically secured communications with [[Transport Layer Security|TLS]], [[DTLS]], [[Simple Mail Transfer Protocol|SMTP]], and [[S/MIME]] based on DNSSEC.

The new protocols will enable additional assurances and constraints for the traditional model based on [[public key infrastructure]]. They will also enable domain holders to assert certificates for themselves, without reference to third-party [[certificate authority|certificate authorities]].

Support for DNSSEC stapled certificates was enabled in [[Google Chrome]] 14,<ref>{{cite web|url=http://www.imperialviolet.org/2011/06/16/dnssecchrome.html|title=ImperialViolet|access-date=2011-11-26}}</ref> but was later removed.<ref>{{cite web|url=https://git.chromium.org/gitweb/?p=chromium/chromium.git;a=commit;h=6a7172345e72d755d99c095eb3d4768f0f585344|title=chromium git|access-date=2013-03-09}}</ref> For [[Mozilla Firefox]], support was provided by an add-on<ref>{{cite web|url=https://www.dnssec-validator.cz/|title=DNSSEC/TLSA Validator}}</ref> while native support is currently awaiting someone to start working on it.<ref>[https://bugzilla.mozilla.org/show_bug.cgi?id=672600 Bugzilla@Mozilla: Bug 672600 - Use DNSSEC/DANE chain stapled into TLS handshake in certificate chain validation]</ref>

==History==
DNS is a critical and fundamental Internet service, yet in 1990 [[Steve Bellovin]] discovered serious security flaws in it. Research into securing it began, and progressed dramatically when his paper was made public in 1995.<ref>[http://citeseer.ist.psu.edu/bellovin95using.html "Using the Domain Name System for System Break-Ins"] by Steve Bellovin, 1995</ref>  The initial RFC 2065 was published by the IETF in 1997, and initial attempts to implement that specification led to a revised (and believed fully workable) specification in 1999 as IETF RFC 2535.  Plans were made to deploy DNSSEC based on RFC 2535.

Unfortunately, the IETF RFC 2535 specification had very significant problems scaling up to the full Internet; by 2001 it became clear that this specification was unusable for large networks. In normal operation DNS servers often get out of sync with their parents. This isn't usually a problem, but when DNSSEC is enabled, this out-of-sync data could have the effect of a serious self-created denial of service.  The original DNSSEC required a complex six-message protocol and a lot of data transfers to perform key changes for a child (DNS child zones had to send all of their data up to the parent, have the parent sign each record, and then send those signatures back to the child for the child to store in a SIG record).  Also, public key changes could have absurd effects; for example, if the ".com" zone changed its public key, it would have to send 22 million records (because it would need to update all of the signatures in all of its children).  Thus, DNSSEC as defined in RFC 2535 could not scale up to the Internet.

The IETF fundamentally modified DNSSEC, which is called ''DNSSEC-bis'' when necessary to distinguish it from the original DNSSEC approach of RFC 2535.  This new version uses "delegation signer (DS) resource records" to provide an additional level of indirection at delegation points between a parent and child zone. In the new approach, when a child's master public key changes, instead of having six messages for every record in the child, there is one simple message: the child sends the new public key to its parent (signed, of course). Parents simply store one master public key for each child; this is much more practical. This means that a little data is pushed to the parent, instead of massive amounts of data being exchanged between the parent and children. This does mean that clients have to do a little more work when verifying keys. More specifically, verifying a DNS zone's KEY RRset requires two signature verification operations instead of the one required by RFC 2535 (there is no impact on the number of signatures verified for other types of RRsets). Most view this as a small price to pay, since it makes DNSSEC deployment more practical.

==Authenticating NXDOMAIN responses and NSEC==
Cryptographically proving the absence of a domain requires signing the response to every query for a non-existent domain.  This is not a problem for online signing servers, which keep their keys available online.  However, DNSSEC was designed around using offline computers to sign records so that zone-signing-keys could be kept in cold storage.  This represents a problem when trying to authenticate responses to queries for non-existent domains since it is impossible to pre-generate a response to every possible hostname query.

The initial solution was to create NSEC records for every pair of domains in a zone.  Thus if a client queried for a record at the non-existent <code>k.example.com</code>, the server would respond with an NSEC record stating that nothing exists between <code>a.example.com</code> and <code>z.example.com</code>.  However, this leaks more information about the zone than traditional unauthenticated NXDOMAIN errors because it exposes the existence of real domains.

The NSEC3 records (RFC 5155) were created as an alternative which hashes the name instead of listing them directly.  Over time, advancements in hashing using GPUs and dedicated hardware meant that NSEC3 responses could be cheaply brute forced using offline dictionary attacks.  [https://datatracker.ietf.org/doc/draft-vcelak-nsec5/ NSEC5] has been proposed to allow authoritative servers to sign NSEC responses without having to keep a private key that can be used to modify the zone.  Thus stealing an NSEC5KEY would only result in the ability to more easily enumerate a zone.<ref>{{Cite web|url=https://www.cs.bu.edu/~goldbe/papers/nsec5.html|title=NSEC5: Provably Preventing DNSSEC Zone Enumeration}}</ref>

Due to the messy evolution of the protocol and a desire to preserve backwards compatibility, online DNSSEC signing servers return a "white lie" instead of authenticating a denial of existence directly. The technique outlined in RFC 4470 returns a NSEC record in which the pairs of domains lexically surrounding the requested domain.  For example, request for <code>k.example.com</code> would thus result in an NSEC record proving that nothing exists between the (fictitious) domains <code>j.example.com</code> and <code>l.example.com</code>.  CloudFlare pioneered another approach in which proves that "the record exists but the requested record type does not" that has the advantage of a significantly reduced payload size.<ref>{{Cite web | url=https://blog.cloudflare.com/dnssec-done-right/ | title=DNSSEC Done Right| date=2015-01-29}}</ref>

==Deployment==
The Internet is critical infrastructure, yet its operation depends on the fundamentally insecure DNS.
Thus, there is strong incentive to secure DNS, and deploying DNSSEC is generally considered to be a critical part of that effort.
For example, the U.S. ''National Strategy to Secure Cyberspace'' specifically identified the need to secure DNS.<ref>[https://www.us-cert.gov/sites/default/files/publications/cyberspace_strategy.pdf U.S. ''National Strategy to Secure Cyberspace''], p. 30 February 2003</ref>
Wide-scale deployment of DNSSEC could resolve many other security problems as well, such as secure key distribution for e-mail addresses.

DNSSEC deployment in large-scale networks is also challenging. Ozment and Schechter observe that DNSSEC (and other technologies) has a "bootstrap problem": users typically only deploy a technology if they receive an immediate benefit, but if a minimal level of deployment is required before ''any'' users receive a benefit greater than their costs (as is true for DNSSEC), it is difficult to deploy. DNSSEC can be deployed at any level of a DNS hierarchy, but it must be widely available in a zone before many others will want to adopt it. DNS servers must be updated with software that supports DNSSEC, and DNSSEC data must be created and added to the DNS zone data. A TCP/IP-using client must have their DNS resolver (client) updated before it can use DNSSEC's capabilities. What is more, any resolver must have, or have a way to acquire, at least one public key that it can trust before it can start using DNSSEC.

DNSSEC implementation can add significant load to some DNS servers. Common DNSSEC-signed responses are far larger than the default UDP size of 512 bytes. In theory, this can be handled through multiple IP fragments, but many "middleboxes" in the field do not handle these correctly. This leads to the use of TCP instead. Yet many current TCP implementations store a great deal of data for each TCP connection; heavily loaded servers can run out of resources simply trying to respond to a larger number of (possibly bogus) DNSSEC requests. Some protocol extensions, such as [[TCP Cookie Transactions]], have been developed to reduce this loading.<ref>
{{cite web
|url=http://www.usenix.org/publications/login/2009-12/openpdfs/metzger.pdf
|title=Improving TCP security with robust cookies
|work=Usenix
|author1=Metzger, Perry |author2=William Allen Simpson |author3=Paul Vixie  |name-list-style=amp|access-date=2009-12-17
}}</ref> To address these challenges, significant effort is ongoing to deploy DNSSEC, because the Internet is so vital to so many organizations.

===Early deployments===
Early adopters include [[Brazil]] ([[.br]]), [[Bulgaria]] ([[.bg]]), [[Czech Republic]] ([[.cz]]), [[Namibia]] ([[.na]])<ref>https://ccnso.icann.org/de/node/7603</ref> [[Puerto Rico]] ([[.pr]]) and [[Sweden]] ([[.se]]), who use DNSSEC for their [[country code top-level domain]]s;<ref name="EPIC-20080527">Electronic Privacy Information Center (EPIC) (May 27, 2008). [http://epic.org/privacy/dnssec/ DNSSEC]<!--access-date=2008-06-13--></ref> [[RIPE NCC]], who have signed all the reverse lookup records (in-addr.arpa) that are delegated to it from the [[Internet Assigned Numbers Authority]] (IANA).<ref>[http://www.ripe.net/docs/ripe-359.html RIPE NCC DNSSEC Policy] {{webarchive |url=https://web.archive.org/web/20071022171800/http://www.ripe.net/docs/ripe-359.html |date=October 22, 2007 }}</ref> [[ARIN]] is also signing their reverse zones.<ref>[https://www.arin.net/resources/dnssec/ ARIN DNSSEC Deployment Plan]</ref> In February 2007, [[TDC A/S|TDC]] became the first Swedish ISP to start offering this feature to its customers.<ref>{{cite web|url=https://www.ripe.net/ripe/mail/archives/dns-wg/2007-February/001917.html|title=[dns-wg] Swedish ISP TCD Song Adopts DNSSEC|last=Eklund-Löwinder|first=Anne-Marie|date=12 February 2012|work=dns-wg mailing list|publisher=RIPE NCC|access-date=2 December 2012}}</ref>

IANA publicly tested a sample signed root since June 2007. During this period prior to the production signing of the root, there were also several alternative trust anchors. The IKS Jena introduced one on January 19, 2006,<ref>[http://www.ripe.net/ripe/maillists/archives/dns-wg/2006/msg00053.html dns-wg archive: Signed zones list] {{webarchive |url=https://web.archive.org/web/20070305102531/http://www.ripe.net/ripe/maillists/archives/dns-wg/2006/msg00053.html |date=March 5, 2007 }}</ref> the [[Internet Systems Consortium]] introduced another on March 27 of the same year,<ref>[https://www.isc.org/node/62 ISC Launches DLV registry to kick off worldwide DNSSEC deployment] {{webarchive |url=https://web.archive.org/web/20081118020616/https://www.isc.org/node/62 |date=November 18, 2008 }}</ref> while [[ICANN]] themselves announced a third on February 17, 2009.<ref>[https://itar.iana.org/ Interim Trust Anchor Repository]</ref>

On June 2, 2009, [[Afilias]], the registry service provider for [[Public Interest Registry]]'s .org zone signed the .org TLD.<ref>[http://pir.org/index.php?db=content/News&tbl=Press&id=25 .ORG is the first open TLD signed with DNSSEC]</ref> Afilias and PIR also detailed on September 26, 2008, that the first phase, involving large registrars it has a strong working relationship with ("friends and family") would be the first to be able to sign their domains, beginning "early 2009".<ref>
{{cite web
|url=http://www.internetnews.com/security/article.php/3774131
|title=.ORG the Most Secure Domain?
|work=www.internetnews.com
|author=Sean Michael Kerner
|access-date=2008-09-27
}}</ref> On June 23, 2010, 13 registrars were listed as offering DNSSEC records for .ORG domains.<ref>
{{cite web
|url=http://www.pir.org/get/registrars?order=field_dnssec_value&sort=desc
|title=.ORG Registrar List&nbsp;— with DNSSEC enabled at the top
|access-date=2010-06-23
}}</ref>

VeriSign ran a pilot project to allow .com and .net domains to register themselves for the purpose of NSEC3 experimentation. On February 24, 2009, they announced that they would deploy DNSSEC across all their top-level domains (.com, .net, etc.) within 24 months,<ref>[http://www.networkworld.com/news/2009/022409-verisign-dns-security.html?page=1 VeriSign: We will support DNS security in 2011] {{webarchive |url=https://web.archive.org/web/20090303103411/http://www.networkworld.com/news/2009/022409-verisign-dns-security.html?page=1 |date=March 3, 2009 }}</ref> and on November 16 of the same year, they said the .com and .net domains would be signed by the first quarter of 2011, after delays caused by technical aspects of the implementation.<ref>[http://news.zdnet.co.uk/security/0,1000000189,39877966,00.htm VeriSign: Major internet security update by 2011]</ref> This goal was achieved on-schedule<ref>[https://archive.today/20130123041030/http://www.esecurityplanet.com/features/article.php/3929786/com-Domain-Finally-Safe.htm .com Domain Finally Safe]</ref> and Verisign's DNSSEC VP, Matt Larson, won InfoWorld's Technology Leadership Award for 2011 for his role in advancing DNSSEC.<ref>[http://www.circleid.com/posts/20110601_verisign_matt_larson_wins_2011_infoworld_technology_leadership/ Verisign's Matt Larson Wins 2011 InfoWorld Technology Leadership Award]</ref><ref>[http://www.infoworld.com/t/information-technology-careers/the-infoworld-2011-technology-leadership-awards-959 The InfoWorld 2011 Technology Leadership Awards]</ref>

===Deployment at the DNS root===
DNSSEC was first deployed at the root level on July 15, 2010.<ref name="dnssec-status-live">{{cite web|title=Root DNSSEC Status Update, 2010-07-16|url=http://www.root-dnssec.org/2010/07/16/status-update-2010-07-16/|date=16 July 2010}}</ref> This is expected to greatly simplify the deployment of DNSSEC resolvers, since the root trust anchor can be used to validate any DNSSEC zone that has a complete chain of trust from the root. Since the chain of trust must be traced back to a trusted root without interruption in order to validate, trust anchors must still be configured for secure zones if any of the zones above them are not secure. For example, if the zone "signed.example.org" was secured but the "example.org" zone was not, then, even though the ".org" zone and the root are signed, a trust anchor has to be deployed in order to validate the zone.

Political issues surrounding signing the root have been a continuous concern, primarily about some central issues:
* Other countries are concerned about U.S. control over the Internet, and may reject any centralized keying for this reason.
* Some governments might try to ban DNSSEC-backed encryption key distribution.

====Planning====
In September 2008, ICANN and VeriSign each published implementation proposals<ref>{{cite news|author=Singel, Ryan|title=Feds Start Moving on Net Security Hole|url=http://blog.wired.com/27bstroke6/2008/10/feds-take-step.html|date=October 8, 2006|work=Wired News|publisher=CondéNet|access-date=2008-10-09}}</ref> and in October, the [[National Telecommunications and Information Administration]] (NTIA) asked the public for comments.<ref>{{cite press release|title=Press Release: NTIA Seeks Public Comments for the Deployment of Security Technology Within the Internet Domain Name System|url=http://www.ntia.doc.gov/press/2008/DNSSEC_081009.html|date=October 9, 2008|publisher=National Telecommunications and Information Administration, U.S. Department of Commerce|access-date=2008-10-09}}</ref> It is unclear if the comments received affected the design of the final deployment plan.

On June 3, 2009, the [[National Institute of Standards and Technology]] (NIST) announced plans to sign the root by the end of 2009, in conjunction with ICANN, [[VeriSign]] and the NTIA.<ref name="NISTpr609">{{cite press release | url= https://www.nist.gov/public_affairs/releases/dnssec_060309.html | title= Commerce Department to Work with ICANN and VeriSign to Enhance the Security and Stability of the Internet's Domain Name and Addressing System | publisher= National Institute of Standards and Technology | date= 3 June 2009 }}</ref>

On October 6, 2009, at the 59th [[RIPE]] Conference meeting, ICANN and VeriSign announced the planned deployment timeline for deploying DNSSEC within the root zone.<ref name="conf">{{cite web | title = DNSSEC for the Root Zone | url=http://www.ripe.net/ripe/meetings/ripe-59/presentations/abley-dnssec-root-zone.pdf}}</ref> At the meeting it was announced that it would be incrementally deployed to one root name server a month, starting on December 1, 2009, with the final root name server serving a DNSSEC signed zone on July 1, 2010, and the root zone will be signed with a RSA/SHA256 DNSKEY.<ref name="conf"/> During the incremental roll-out period the root zone will serve a ''Deliberately Unvalidatable Root Zone'' (DURZ) that uses dummy keys, with the final DNSKEY record not being distributed until July 1, 2010.<ref name="last-puzzle-pieces">{{Cite journal | last= Hutchinson | first= James | title= ICANN, Verisign place last puzzle pieces in DNSSEC saga | publisher= NetworkWorld | url= http://www.networkworld.com/news/2010/050610-icann-verisign-place-last-puzzle.html?hpg1=bn | date= 6 May 2010 }}</ref> This means the keys that were used to sign the zone use are deliberately unverifiable; the reason for this deployment was to monitor changes in traffic patterns caused by the larger responses to queries requesting DNSSEC resource records.

The [[.org]] top-level domain has been signed with DNSSEC in June 2010, followed by [[.com]], [[.net]], and [[.edu]] later in 2010 and 2011.<ref>{{cite web|url=http://www.thetechherald.com/article.php/201010/5366/DNSSEC-to-become-standard-on-ORG-domains-by-end-of-June|title=DNSSEC to become standard on .ORG domains by end of June|access-date=2010-03-24|url-status=dead|archive-url=https://web.archive.org/web/20100315143451/http://www.thetechherald.com/article.php/201010/5366/DNSSEC-to-become-standard-on-ORG-domains-by-end-of-June|archive-date=2010-03-15}}</ref><ref>[https://web.archive.org/web/20110404225604/http://www.theinquirer.net/inquirer/news/2039648/verisign-deploys-dnssec-com-tld The Inquirer: Verisign deploys DNSSEC on .com TLD]</ref> [[Country code top-level domain]]s were able to deposit keys starting in May 2010.<ref name="heise">[http://www.h-online.com/security/news/item/More-security-for-root-DNS-servers-962569.html More security for root DNS servers] Heise Online, 24 March 2010</ref> {{As of|2011|11}} more than 25% of top-level domains are signed with DNSSEC.<ref>[http://www.circleid.com/posts/20111130_dnssec_update_from_icann_42_in_dakar/ CircleID: DNSSEC Update from ICANN 42 in Dakar]</ref>

====Implementation====
On January 25, 2010, the L (ell) root server began serving a ''Deliberately Unvalidatable Root Zone'' (DURZ). The zone uses signatures of a [[SHA-2]] (SHA-256) hash created using the [[RSA (algorithm)|RSA]] algorithm, as defined in RFC 5702.<ref>{{cite web | title= DNSSEC Root Zone High Level Technical Architecture | url= http://www.root-dnssec.org/wp-content/uploads/2010/06/draft-icann-dnssec-arch-v1dot4.pdf }}</ref><ref>RFC 5702, §2.1. "RSA public keys for use with RSA/SHA-256 are stored in DNSKEY resource records (RRs) with the algorithm number 8."</ref><ref>RFC 5702, §3.1. "RSA/SHA-256 signatures are stored in the DNS using RRSIG resource records (RRs) with algorithm number 8."</ref> As of May 2010, all thirteen root servers have begun serving the DURZ.<ref name="last-puzzle-pieces"/>  On July 15, 2010, the first root full production DNSSEC root zone was signed, with the SOA serial 2010071501.   Root trust anchors are [https://data.iana.org/root-anchors/ available from IANA].<ref name="dnssec-status-live"/>

===Deployment at the TLD level===
Underneath the root there is a large set of top-level domains that must be signed in order to achieve full DNSSEC deployment.  The [[List of Internet top-level domains]] provides details about which of the existing top-level domains have been signed and linked to the root.

===DNSSEC Lookaside Validation - historical===
In March 2006, the [[Internet Systems Consortium]] introduced the DNSSEC Lookaside Validation registry.<ref>[https://www.isc.org/news-article/isc-launches-dlv-registry-kick-worldwide-dnssec-deployment ISC Launches DLV registry to kick off worldwide DNSSEC deployment] {{webarchive |url=https://web.archive.org/web/20110614123636/https://www.isc.org/news-article/isc-launches-dlv-registry-kick-worldwide-dnssec-deployment |date=June 14, 2011 }}</ref> DLV was intended to make DNSSEC easier to deploy in the absence of a root trust anchor. At the time it was imagined that a validator might have to maintain large numbers of trust anchors corresponding to signed subtrees of the DNS.<ref>RFC 5011, "Automated Updates of DNS Security (DNSSEC) Trust Anchors"</ref> The purpose of DLV was to allow validators to offload the effort of managing a trust anchor repository to a trusted third party. The DLV registry maintained a central list of trust anchors, instead of each validator repeating the work of maintaining its own list.

To use DLV, a validator that supports it was needed, such as [[BIND]] or [[Unbound (DNS Server)|Unbound]], configured with a trust anchor for a DLV zone. This zone contained DLV records;<ref>RFC 4431, "The DNSSEC Lookaside Validation (DLV) DNS Resource Record"</ref> these had exactly the same format as DS records, but instead of referring to a delegated sub-zone, they referred to a zone elsewhere in the DNS tree. When the validator could not find a chain of trust from the root to the RRset it is trying to check, it searched for a DLV record that could provide an alternative chain of trust.<ref>RFC 5074, "DNSSEC Lookaside Validation (DLV)"</ref>

Gaps in the chain of trust, such as unsigned top-level domains or registrars that did not support DNSSEC delegations, meant administrators of lower-level domains could use DLV to allow their DNS data to be validated by resolvers which had been configured to use DLV. This may have hindered DNSSEC deployment by taking pressure off registrars and TLD registries to properly support DNSSEC. DLV also added complexity by adding more actors and code paths for DNSSEC validation. 

ISC decommissioned its DLV registry in 2017.<ref>{{Cite web|title=DLV Replaced With Signed Empty Zone - Internet Systems Consortium|url=https://www.isc.org/blogs/dlv-replaced-with-signed-empty-zone/|access-date=2020-06-05|website=www.isc.org|date=30 September 2017}}</ref>  DLV support was deprecated in BIND 9.12 and completely removed from BIND 9.16.<ref>{{Cite web|title=BIND 9.16.0, Stable Branch for 2020 and Beyond - Internet Systems Consortium|url=https://www.isc.org/blogs/bind9.16.0_released/|access-date=2020-06-05|website=www.isc.org|date=20 February 2020}}</ref> Unbound version 1.5.4 (July 2015) marked DLV as decommissioned in the example configuration and manual page.<ref>{{Cite web|title=Unbound 1.5.4 Changes|url=https://nlnetlabs.nl/projects/unbound/download/#unbound-1-5-4|access-date=2020-06-05|website=NLnet Labs|language=en}}</ref> Knot Resolver and PowerDNS Recursor never implemented DLV.

In March 2020, the [[IETF]] published RFC 8749, retiring DLV as a standard and moving RFC 4432 and RFC 5074 to "Historic" status.<ref>{{cite IETF |title=Moving DNSSEC Lookaside Validation (DLV) to Historic Status |rfc=879 |last1=Mekking |first1=W. |author-link1=W. (Matthijs) Mekking |last2=Mahoney |first2=D. |author-link2=Dan Mahoney (computer scientist) |date= March 2020 |publisher=[[Internet Engineering Task Force|IETF]] |access-date= 3 June 2020|doi=10.17487/RFC8749  }}</ref>

===DNSSEC deployment initiative by the U.S. federal government===
The Science and Technology Directorate of the [[United States Department of Homeland Security|U.S. Department of Homeland Security]] (DHS) sponsors the "DNSSEC Deployment Initiative".
This initiative encourages "all sectors to voluntarily adopt security measures that will improve security of the Internet's naming infrastructure, as part of a global, cooperative effort that involves many nations and organizations in the public and private sectors."
DHS also funds efforts to mature DNSSEC and get it deployed inside the U.S. federal government.

It was reported<ref>''[http://www.heise.de/english/newsticker/news/87655 Department of Homeland and Security wants master key for DNS] {{webarchive |url=https://web.archive.org/web/20070406172122/http://www.heise.de/english/newsticker/news/87655 |date=April 6, 2007 }}'' [[Heinz Heise|Heise]] News, 30 March 2007</ref> that on March 30, 2007, the [[United States Department of Homeland Security|U.S. Department of Homeland Security]] proposed "to have the key to sign the DNS root zone solidly in the hands of the US government."  However no U.S. Government officials were present in the meeting room and the comment that sparked the article was made by another party.  DHS later commented<ref>''[http://www.upi.com/Security_Terrorism/Analysis/2007/04/12/analysis_owning_the_keys_to_the_internet/ Analysis: of Owning the keys to the Internet]'' [[United Press International|UPI]], April 21, 2007</ref><ref>''[http://www.mail-archive.com/osint@yahoogroups.com/msg39697.html UPI Analysis: Owning the keys to the Internet ]'' March 24, 2011 - First link is dead, this is believed to be the same content</ref> on why they believe others jumped to the false conclusion that the U.S. Government had made such a proposal: "The U.S. Department of Homeland Security is funding the development of a technical plan for implementing DNSSec, and last October distributed an initial draft of it to a long list of international experts for comments.  The draft lays out a series of options for who could be the holder, or "operator," of the Root Zone Key, essentially boiling down to a governmental agency or a contractor.  "Nowhere in the document do we make any proposal about the identity of the Root Key Operator," said Maughan, the cyber-security research and development manager for Homeland Security."

===DNSSEC deployment in the U.S. federal government===
{{outdated section|date=November 2015}}
The [[National Institute of Standards and Technology]] (NIST) published NIST Special Publication 800-81 Secure Domain Name System (DNS) Deployment Guide on May 16, 2006, with guidance on how to deploy DNSSEC. NIST intended to release new DNSSEC Federal Information Security Management Act (FISMA) requirements in NIST SP800-53-R1, referencing this deployment guide. U.S. agencies would then have had one year after final publication of NIST SP800-53-R1 to meet these new FISMA requirements.<ref>[http://www.dnssec-deployment.org/news/dnssecthismonth/200606-dnssecthismonth/ DNSSEC Deployment Initiative Newsletter - Volume 1, Number 2] {{webarchive |url=https://web.archive.org/web/20071122021856/http://www.dnssec-deployment.org/news/dnssecthismonth/200606-dnssecthismonth/ |date=November 22, 2007 }}, June 2006</ref>  However, at the time NSEC3 had not been completed.  NIST had suggested using split domains, a technique that is known to be possible but is difficult to deploy correctly, and has the security weaknesses noted above.

On 22 August 2008, the Office of Management and Budget (OMB) released a memorandum requiring U.S. Federal Agencies to deploy DNSSEC across .gov sites; the .gov root must be signed by January 2009, and all subdomains under .gov must be signed by December 2009.<ref>[https://obamawhitehouse.archives.gov/omb/memoranda/fy2008/m08-23.pdf Memorandum For Chief Information Officers] {{webarchive|url=https://web.archive.org/web/20080916034802/http://www.whitehouse.gov/omb/memoranda/fy2008/m08-23.pdf |date=2008-09-16 }} Executive Office Of The President&nbsp;— Office Of Management And Budget, 22 August 2008</ref>  While the memo focuses on .gov sites, the U.S. Defense Information Systems Agency says it intends to meet OMB DNSSEC requirements in the .mil (U.S. military) domain as well.  NetworkWorld's Carolyn Duffy Marsan stated that DNSSEC "hasn't been widely deployed because it suffers from a classic chicken-and-egg dilemma... with the OMB mandate, it appears the egg is cracking."<ref>[http://www.networkworld.com/news/2008/092208-government-web-security.html Feds tighten security on .gov] {{webarchive |url=https://web.archive.org/web/20080925011755/http://www.networkworld.com/news/2008/092208-government-web-security.html |date=September 25, 2008 }} Network World, 22 September 2008</ref>

===Deployment in resolvers===
Several ISPs have started to deploy DNSSEC-validating DNS recursive resolvers. Comcast became the first major ISP to do so in the United States, announcing their intentions on October 18, 2010<ref>[http://blog.comcast.com/2010/10/dns-security-rollout-begins.html Comcast Blog - DNS Security Rollout Begins], October 18, 2010</ref><ref>[http://www.dnssec.comcast.net/dnssec-video.htm Comcast DNSSEC Public Service Announcement Video] {{webarchive|url=https://web.archive.org/web/20101021044129/http://www.dnssec.comcast.net/dnssec-video.htm |date=2010-10-21 }}, October 18, 2010</ref> and completing deployment on January 11, 2012.<ref>[http://blog.comcast.com/2012/01/comcast-completes-dnssec-deployment.html Comcast Completes DNSSEC Deployment], January 11, 2012</ref>

According to a study at [[APNIC]], the proportion of clients who exclusively use DNS resolvers that perform DNSSEC validation rose to 8.3% in May 2013.<ref name="CircleID">[http://www.circleid.com/posts/20130717_dns_dnssec_and_googles_public_dns_service/ Geoff Huston: DNS, DNSSEC and Google's Public DNS Service (CircleID)]</ref> About half of these clients were using [[Google Public DNS|Google's public DNS resolver]].

In September 2015, Verisign announced their free public DNS resolver service,<ref name="Verisign">[http://www.circleid.com/posts/20150929_verisign_public_dns_free_dns_service_respects_privacy/ Introducing Verisign Public DNS]</ref> and although unmentioned in their press releases, it also performs DNSSEC validation.

By the beginning of 2016, APNIC's monitoring showed the proportion of clients who exclusively use DNS resolvers that perform DNSSEC validation had increased to about 15%.<ref name="XA">[http://stats.labs.apnic.net/dnssec/XA Use of DNSSEC Validation for World (XA)]</ref>

====DNSSEC support====
Google's [[Google Public DNS|public recursive DNS]] server enabled DNSSEC validation on May 6, 2013.<ref>[https://security.googleblog.com/2013/03/google-public-dns-now-supports-dnssec.html Google Public DNS Now Supports DNSSEC Validation] Google  Code Blog, 1 June 2013</ref>

[[BIND]], the most popular DNS management software, enables DNSSEC support by default since version 9.5.

The [[Quad9|Quad9 public recursive DNS]] has performed DNSSEC validation on its main 9.9.9.9 address since it was established on May 11, 2016. Quad9 also provides an alternate service which does not perform DNSSEC validation, principally for debugging.<ref>{{Cite web|url=https://www.quad9.net/faq/|title=Quad9 FAQ|website=Quad9|access-date=July 7, 2018}}</ref>

==IETF publications==
* {{IETF RFC|2535}} Domain Name System Security Extensions
* {{IETF RFC|3225}} Indicating Resolver Support of DNSSEC
* {{IETF RFC|3226}} DNSSEC and IPv6 A6 Aware Server/Resolver Message Size Requirements
* {{IETF RFC|3833}} A Threat Analysis of the Domain Name System
* {{IETF RFC|4033}} DNS Security Introduction and Requirements (''DNSSEC-bis'')
* {{IETF RFC|4034}} Resource Records for the DNS Security Extensions (''DNSSEC-bis'')
* {{IETF RFC|4035}} Protocol Modifications for the DNS Security Extensions (''DNSSEC-bis'')
* {{IETF RFC|4398}} Storing Certificates in the Domain Name System (DNS)
* {{IETF RFC|4431}} The DNSSEC Lookaside Validation (DLV) DNS Resource Record
* {{IETF RFC|4470}} Minimally Covering NSEC Records and DNSSEC On-line Signing
* {{IETF RFC|4509}} Use of SHA-256 in DNSSEC Delegation Signer (DS) Resource Records (RRs)
* {{IETF RFC|4641}} DNSSEC Operational Practices
* {{IETF RFC|4955}} DNS Security (DNSSEC) Experiments
* {{IETF RFC|5011}} Automated Updates of DNS Security (DNSSEC) Trust Anchors
* {{IETF RFC|5155}} DNSSEC Hashed Authenticated Denial of Existence
* {{IETF RFC|5702}} Use of SHA-2 Algorithms with RSA in DNSKEY and RRSIG Resource Records for DNSSEC
* {{IETF RFC|6605}} Elliptic Curve Digital Signature Algorithm (DSA) for DNSSEC
* {{IETF RFC|6725}} DNS Security (DNSSEC) DNSKEY Algorithm IANA Registry Updates
* {{IETF RFC|6781}} DNSSEC Operational Practices, Version 2
* {{IETF RFC|6840}} Clarifications and Implementation Notes for DNS Security (DNSSEC)
* {{IETF RFC|7344}} Automating DNSSEC Delegation Trust Maintenance
* {{IETF RFC|7583}} DNSSEC Key Rollover Timing Considerations
* {{IETF RFC|8080}} Edwards-Curve Digital Security Algorithm (EdDSA) for DNSSEC
* {{IETF RFC|8624}} Algorithm Implementation Requirements and Usage Guidance for DNSSEC
* {{IETF RFC|8749}} Moving DNSSEC Lookaside Validation (DLV) to Historic Status

==Tools==
DNSSEC deployment requires software on the server and client side. Some of the tools that support DNSSEC include:

* [[Windows 7]] and [[Windows Server 2008|Windows Server 2008 R2]] include a "security-aware" stub resolver that is able to differentiate between secure and non-secure responses by a recursive name server. Windows Server 2012 DNSSEC is compatible with secure dynamic updates with Active Directory-integrated zones, plus Active Directory replication of anchor keys to other such servers.<ref name="port53">{{cite web | title= DNSSEC on Windows 7 DNS client | last= Seshadri | first= Shyam | work= Port 53 | publisher= Microsoft | date= 11 November 2008 | url= http://blogs.technet.com/sseshad/archive/2008/11/11/dnssec-on-windows-7-dns-client.aspx }}</ref><ref>[https://www.dns-oarc.net/files/workshop-2006/Microsoft-DNSSEC.pdf DNSSEC in Windows Server]</ref>
* [[BIND]], the most popular DNS name server (which includes [[Domain Information Groper|dig]]), incorporates the newer ''DNSSEC-bis'' (DS records) protocol as well as support for NSEC3 records.
* [[Unbound (DNS server)|Unbound]] is a DNS name server that was written from the ground up to be designed around DNSSEC concepts.
* [[mysqlBind]] The GPL [[DNS management software]] for DNS ASPs now supports DNSSEC.
* [[OpenDNSSEC]] is a designated DNSSEC signer tool using [[PKCS11|PKCS#11]] to interface with [[hardware security module]]s.
* [[Knot DNS]] has added support for automatic DNSSEC signing in version 1.4.0.
* [[PowerDNS]] fully supports DNSSEC as of version 3.0 in pre-signed and live-signed modes.
* [[DNSSEC]]: [https://www.icann.org/resources/pages/dnssec-what-is-it-why-important-2019-03-05-en What is it and why is it important to implement it for a long time?] — [https://en.internet.nl/connection/ Check it] [https://en.internet.nl/ Initiative of the Internet community and the Dutch government]

==See also==
*[[DNSCrypt]]
*[[DNSCurve]]
*[[Extension Mechanisms for DNS|Extension Mechanisms for DNS (EDNS)]]
*[[TSIG]]
*[[Resource Public Key Infrastructure|Resource Public Key Infrastructure (RPKI)]]

==References==
{{reflist|30em}}

==Further reading==
* {{cite journal|author1=H. Yang|author2= E. Osterweil|author3=D. Massey|author4=S. Lu| author5=L. Zhang|author-link5=Lixia Zhang|title=Deploying Cryptography in Internet-Scale Systems: A Case Study on DNSSEC|journal=IEEE Transactions on Dependable and Secure Computing|date=8 April 2010|volume=8|issue=5|pages=656–669|doi=10.1109/TDSC.2010.10|citeseerx= 10.1.1.158.1984|s2cid= 14887477}}

==External links==
* [https://www.dnssec.net/ DNSSEC] - DNSSEC information site: DNSSEC.net
* [https://web.archive.org/web/20031008105543/http://www.ietf.org/html.charters/dnsext-charter.html DNSEXT] DNS Extensions [[IETF Working Group]]
* [https://web.archive.org/web/20190429202558/http://dnssec-tools.org/ DNSSEC-Tools Project]

{{Authority control}}<br />
[[Category:Internet Standards]]
[[Category:Domain Name System]]
[[Category:Domain name system extensions]]
[[Category:Public-key cryptography]]
[[Category:Key management]]
[[Category:Domain Name System Security Extensions| ]]
[[sv:DNS#DNSSEC]]